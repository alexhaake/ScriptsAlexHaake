#!/bin/bash

#1 Escriba un script que elimine un archivo o directorio pasado como parámetro, y le pregunte si está seguro de llevar a cabo la acción.

if [[ -e $1 ]]; then
 if [[ -d $1 ]]; then
  read -p "¿Quiere borrar el directorio $1? (S/N): " opcion
 if [[ $opcion == "s" || $opcion == "S" ]]; then
	rm -r $1
 fi		
  else
 read -p "¿Quiere borrar el fichero $1? (S/N): " opcion
 if [[ $opcion == "s" || $opcion == "S" ]]; then
  rm $1
 fi
 fi	
else
 echo "No existe ."
fi

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash

#2 Escribir un script que pueda mostrar información de un comando al ejecutar dicho script y pasar como parámetro el comando
#Ejemplo consola bash sc2.sh mkdir 
clear
$1 --help

----------------------------------------------------------------------------------------------------------------------------------------------------
#!/bin/bash
#3 Realiza un script que compruebe si el usuario actual del sistema es blas, si es así visualiza su nombre 5 veces, sino te despides de él amigablemente.
clear
usu=$(whoami)
if [[ $usu == blas ]]; then
echo $usu
echo $usu
echo $usu
echo $usu
echo $usu
else
echo "Hasta luego, $usu."
fi

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
#4 En un fichero tengo una palabra clave. Haz un script que muestre si dicha palabra es el parámetro pasado o no.
clear
#creo fichero si no existe
if [[ ! -e clave.txt ]]; then
$(echo "" > clave.txt)
fi
clave=$(cat clave.txt)
if [[ $clave == $1 ]]; then
	echo "correcto:la palabra era $1"
else
	echo "incorrecto :vuelve a intentarlo"
fi

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
#5 Tenemos un menu principal: 1 suma: lee dos numeros y los suma. 2 Resta. 3 Multiplicación. 4 Salir.
read -p "Introduce-> 1Suma  2Resta 3Multiplicación 4Salir: " opcion
case $opcion in
	1)  
	read -p "Primer número: " n1
	read -p "Segundo número: " n2
	suma=$(($n1 + $n2))
	echo "$n1 + $n2 = $suma"
	;;

	2)  
	read -p "Primer número: " n1
	read -p "Segundo número: " n2
	resta=$(($n1 - $n2))
	echo "$n1 - $n2 = $resta"
	;;

	3)  
	read -p "Primer número: " n1
	read -p "Segundo número: " n2
	multi=$(($n1 * $n2))
	echo "$n1 * $n2 = $multi"
	;;

	*) exit 0
esac

---
#!/bin/bash
#6 Nos pide la edad y nos dice si es mayor de edad o menor.

read -p "Introduce tu edad: " edad
if [[ $edad -ge 18 ]]; then
echo "Mayor de edad."
else
echo "Menor de edad."
fi

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
#7 Script que reciba un nombre de fichero, verifique que existe y que es un fichero de lectura-escritura, lo convierta en ejecutable para el usuario y el grupo y muestre el estado final de los permisos.
clear
if [[ ! -f $1 ]]; then
	read -p "El fichero no existe o es un directorio.
¿Desea crear el fichero $1? S/N: " opcion
	if [[ $opcion == "S" || $opcion == "s" ]]; then
	 echo > $1
	fi
elif [[ -r $1 && -w $1 ]]; then
	echo "Tiene permisos de lectura y escritura."
	 chmod ug+x $1
	 ls -l $1
	else
	 echo "El fichero no tiene permisos de lectura-escritura."
fi

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash

# 8 Script que nos diga al pulsar una tecla, si es letra, numero o caracter especial.
clear
while true; do
read -rsn1 e
 if [[ "$e" = [0-9] ]]; then
	echo "Introdujo el numero: $e"
 elif [[ "$e" = [a-z,A-Z] ]]; then
	echo "Introdujo la letra: $e"
 else
	echo "Introdujo el caracter especial: $e"
 fi
done

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
# 9 realizar un script que reciba varios parametros y nos diga cuantos de esos parametros son de directorios y cuantos son archivos. $# contador que indica cuantos parametros se pasan.
clear
countD=0
countF=0
for i in $@; do
	if [[ -d $i ]]; then
	countD=$(($countD+1))
	elif [[ -f $i ]]; then
	countF=$(($countF+1))
	fi
done
echo "Directorios son: $countD"
echo "Ficheros son: $countF"

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash

# 10 Mostramos menu, con productos para vender, luego nos pide que introduzcamos la opcion. luego mensaje que indica que introduzca moneda. Si ponemos precio exacto nos da mensaje, "Gracias buen provecho", si ponemos menos, nos diga falta. Si poner mas valor, nos indique el cambio con mensaje.
clear
read -p "Productos a vender
1) Pizza: 9€ -- 2) Kebat: 3€ -- 3) Patatas: 1€ --4) Salir
Introduzca el producto que desea comprar: " opcion
case $opcion in
1) read -p "Introduce los 9 euros: " moneda
	if [[ $moneda = 9 ]]; then
		echo "Gracias buen provecho."
	elif [[ $moneda -gt 9 ]]; then
		echo "El cambio: "$((moneda - 9))
	elif [[ $moneda -lt 9 ]]; then
		echo "Falta dinero."
	fi
	;;
2) read -p "Introduce los 3 euros: " moneda
	if [[ $moneda = 3 ]]; then
		echo "Gracias buen provecho."
	elif [[ $moneda -gt 3 ]]; then
		echo "El cambio: "$((moneda - 3))
	elif [[ $moneda -lt 3 ]]; then
		echo "Falta dinero."
	fi
	;;
3) read -p "Introduce los 1 euro: " moneda
	if [[ $moneda = 1 ]]; then
		echo "Gracias buen provecho."
	elif [[ $moneda -gt 1 ]]; then
		echo "El cambio: "$((moneda - 1))
	elif [[ $moneda -lt 1 ]]; then
		echo "Falta dinero."
	fi
	;;		
*) exit 0
	;;		
esac

----------------------------------------------------------------------------------------------------------------------------------------------------
#!/bin/bash
#11 Realizar un script que pida introducir la ruta de un directorio por teclado (Hay que validar que la variable introducida sea un directorio) nos diga cuantos archivos y cuantos directorios hay dentro de ese directorio.
clear
read -p "Introduzca la ruta: " directorio
countD=$(find $directorio/* -type f | wc -l)
conntF=$(find $directorio/* -type d | wc -l)
echo "Dentro del directorio hay $countD Directorios"
echo "Dentro del directorio hay $countF Ficheros."

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
#12 Realiza un script que introduzca número por parámetro y muestre tabla de multiplicar.
clear
echo "La tabla de multiplicar del $1 es:"
for (( i = 1; i <= 10; i++ )); do
 resultado=$(($1 * $i))
 echo "$1 * $i = $resultado"
done

----------------------------------------------------------------------------------------------------------------------------------------------------

#! /bin/bash
#13 Script que limpie todas las reglas, y de permiso a todas las conexiones.
clear
#limpia las reglas
iptables -t nat -F
iptables -t mangle -F
iptables -F
iptables -X
iptables -Z

#permite conexiones
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT
iptables -I INPUT -j ACCEPT

----------------------------------------------------------------------------------------------------------------------------------------------------

#!/bin/bash
#14 Script que limpie todas las reglas, y prohíba cualquier conexión.
clear
#limpia las reglas
iptables -t nat -F
iptables -t mangle -F
iptables -F
iptables -X
iptables -Z
#permite conexiones
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
iptables -I INPUT -j DROP

----------------------------------------------------------------------------------------------------------------------------------------------------
#!/bin/bash
#15 Tendrá 3 parámetros: red(ip), entrada-salida, aceptar-denegar. Dará estos permisos a iptables.
clear
if [[ $2 == "entrada" ]]; then
	if [[ $3 == "aceptar" ]]; then
		iptables -A INPUT -s $1 -j ACCEPT
		echo "entrada aceptar"
	elif [[ $3 == "denegar" ]]; then
		iptables -A INPUT -s $1 -j DROP
		echo "entrada denegar"
	fi

elif [[ $2 == "salida" ]]; then
	if [[ $3 == "aceptar" ]]; then
		iptables -A INPUT -s $1 -j ACCEPT
		echo "salida aceptar"
	elif [[ $3 == "denegar" ]]; then
		iptables -A INPUT -s $1 -j DROP
		echo "salida denegar"
	fi
fi
